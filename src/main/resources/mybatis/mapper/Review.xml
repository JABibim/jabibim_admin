<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jab.admin.mybatis.mapper.ReviewMapper">

    <select id="getAcademyId" resultType="String">
        SELECT academy_id
        FROM teacher
        WHERE teacher_email=#{teacherEmail}
        <!-- 또는 선생 email 로 검색 -->
    </select>

    <select id="getSearchListCount" resultType="int">
        SELECT count(*)
        FROM review r
        INNER JOIN teacher t
        ON r.teacher_id = t.teacher_id
        INNER JOIN student s
        ON r.student_id = s.student_id
        WHERE r.academy_id=#{academyId}
        AND r.review_re_lev=0
        AND r.deleted_at IS NULL
        <include refid="search_"/>
    </select>

    <select id="getSearchList" resultType="reviewListVO">
        SELECT t.*, c.review_status
        FROM  (SELECT  j.*
                FROM (SELECT ROW_NUMBER() OVER(ORDER BY review_re_ref DESC) AS rnum, r.*, t.teacher_name, s.student_name, s.student_email
                        FROM review r
                        INNER JOIN teacher t
                        ON r.teacher_id = t.teacher_id
                        INNER JOIN student s
                        ON r.student_id = s.student_id
                        WHERE r.academy_id=#{academyId}
                        AND r.review_re_lev=0
                        AND r.deleted_at IS NULL
                        <include refid="search_"/>
                        ) j
                WHERE rnum &lt;=#{end}) t
        ,(SELECT review_re_ref, COUNT(CASE WHEN review_re_lev > 0 THEN 1 END) as review_status
          FROM review
          GROUP BY review_re_ref) c
        WHERE rnum BETWEEN #{start} AND #{end}
        AND t.review_re_ref = c.review_re_ref
    </select>


    <sql id="search_">
        <if test="reviewDate1 != null">
            and r.created_at &gt;= #{reviewDate1}
            <if test="reviewDate2 != null">
            and r.created_at &lt;= #{reviewDate2}
            </if>
        </if>
        <if test="reviewDate2 != null">
            and r.created_at &lt;= #{reviewDate2}
        </if>
        <if test="reply_status != null">
            <if test="reply_status == 'done'">
                and r.reply_status > 0
            </if>
            <if test="reply_status == 'wait'">
                and r.reply_status = 0
            </if>
        </if>

        <if test="rating != null">
            <if test="rating == 'under1'">
                and r.review_rating &lt; 10
            </if>
            <if test="rating == '1to3'">
                and r.review_rating &gt;= 10
                and r.review_rating &lt; 30
            </if>
            <if test="rating == '3to4'">
                and r.review_rating &gt;= 30
                and r.review_rating &lt; 40
            </if>
            <if test="rating == 'over4'">
                and r.review_rating &gt;= 40
            </if>
        </if>
        <if test="review_visible != null">
            <if test="review_visible == 'public'">
                and r.review_exposure_stat = 1
            </if>
            <if test="review_visible == 'private'">
                and r.review_exporsure_stat = 0
            </if>
        </if>

        <if test="review_searchField != null and search_word != null">
            and
            <foreach collection="review_searchField" item="data" separator="or">
                <choose>
                    <when test='data == "s"'>r.review_subject</when>
                    <when test='data == "n"'>s.student_name</when>
                    <when test='data == "e"'>s.student_email</when>
                    <when test='data == "c"'>r.created_at</when>
                    <when test='data == "t"'>t.teacher_name</when>
                </choose>
                like #{search_word}
            </foreach>
        </if>
    </sql>
</mapper>