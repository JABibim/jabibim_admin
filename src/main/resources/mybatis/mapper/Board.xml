<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jabibim.admin.mybatis.mapper.BoardMapper">

    <select id="getListCount" resultType="int">
        select count(*)
        from board
        WHERE board_type_id = (
            SELECT board_type_id
            FROM board_type
            WHERE board_type_name = '공지사항'
            LIMIT 1
            )
        AND academy_id = #{academyId}
        AND deleted_at IS NULL
    </select>

    <select id="getNoticeList" resultType="board">
        SELECT *
        FROM (SELECT b.board_id,b.created_at,b.board_notice,b.board_subject,b.teacher_id,
                      t.teacher_name,b.board_readcount,b.board_exposure_stat
              FROM board b
              JOIN teacher t ON b.teacher_id = t.teacher_id
              JOIN board_type y
                   ON b.board_type_id = y.board_type_id
              WHERE y.board_type_name = '공지사항'
              AND b.academy_id = #{academyId}
              AND b.deleted_at IS NULL
             ) AS temp
        ORDER BY created_at desc
        LIMIT #{end} OFFSET #{start}
    </select>

    <select id="getCourseList" resultType="CourseListDTO">
        select course_id, course_name
        from course
    </select>

    <insert id="insertNotice">
        INSERT INTO board
        (board_id, created_at, board_subject, board_content, board_notice,
         board_exposure_stat, board_type_id, board_re_ref, board_re_lev, board_re_seq,
         course_id, board_password, board_file_origin_name, board_file_path, teacher_id,
         academy_id, board_readcount)
        VALUES
        (#{boardId}, NOW(), #{boardSubject}, #{boardContent}, #{boardNotice},
         #{boardExposureStat},(SELECT board_type_id
                               FROM board_type
                               WHERE board_type_name = #{boardTypeId} LIMIT 1),
         ( SELECT MAX(rnum) + 1
            FROM (SELECT COUNT(*) AS rnum
                  FROM board
                  WHERE board_type_id = #{boardTypeId}
                  AND deleted_at IS NULL) AS subquery),
         #{boardReLev},#{boardReSeq}, #{courseId}, #{boardPassword}, #{boardFileOriginName},
         #{boardFilePath}, #{teacherId}, #{academyId}, 0)
    </insert>

    <select id="getDetail" parameterType="string" resultType="board">
        SELECT *
        FROM ( SELECT ROW_NUMBER() OVER (ORDER BY b.CREATED_AT DESC) AS rnum,
                       b.course_id, b.board_id, b.board_subject,
                      b.teacher_id, s.teacher_name, b.created_at, b.board_readcount,
                      b.board_exposure_stat, b.board_notice, b.board_content, c.course_name, b.board_file_origin_name, b.board_file_path
               FROM board b
                        JOIN teacher s ON b.teacher_id = s.teacher_id
                        JOIN course c ON b.course_id = c.course_id
               WHERE board_type_id = (
                   SELECT board_type_id
                   FROM board_type
                   WHERE board_type_name = '공지사항'
                   LIMIT 1
             )
             )AS temp
        WHERE board_id = #{boardId}
    </select>

    <select id="getPreData" parameterType="int" resultType="board">
        SELECT *
        FROM(  SELECT ROW_NUMBER() OVER (ORDER BY created_at DESC) AS rnum, board_subject, board_id, deleted_at
               FROM board
               WHERE board_type_id = (
                   SELECT board_type_id
                   FROM board_type
                   WHERE board_type_name = '공지사항'
               LIMIT 1
            )
            )AS temp
        WHERE  deleted_at IS NULL
        AND rnum &gt; #{rnum}
        ORDER BY rnum ASC
        LIMIT 1
    </select>

    <select id="getNextData" parameterType="int" resultType="board">
        SELECT *
        FROM(  SELECT ROW_NUMBER() OVER (ORDER BY created_at DESC) AS rnum, board_subject, board_id, deleted_at
               FROM board
               WHERE board_type_id = (
                   SELECT board_type_id
                   FROM board_type
                   WHERE board_type_name = '공지사항'
                LIMIT 1
            )
            )AS temp
        WHERE deleted_at IS NULL
        AND rnum &lt; #{rnum}
        ORDER BY rnum DESC
        LIMIT 1
    </select>

    <update id="setReadCountUpdate">
        UPDATE board
        SET board_readcount = board_readcount + 1
        WHERE board_id = #{id}
    </update>

    <select id="isBoardWriter" resultType="board">
        SELECT *
        FROM board
        WHERE board_id = #{id}
        AND board_password = #{pass}
    </select>

    <update id="boardModify">
        UPDATE board
        SET course_id               = #{courseId},
            board_subject           = #{boardSubject},
            board_content           = #{boardContent},
            board_file_origin_name  = #{boardFileOriginName},
            board_file_path         = #{boardFilePath},
            board_exposure_stat     = #{boardExposureStat},
            board_notice            = #{boardNotice}
        WHERE board_id = #{boardId}
    </update>

    <update id="boardDelete">
        UPDATE board
        SET deleted_at = NOW()
        WHERE board_id = #{boardId}
    </update>

    <insert id="initBoardTypeInfo">
        INSERT INTO board_type (
                                  board_type_id
                                , created_at
                                , board_type_name
                                , academy_id
                                )
        VALUES (
                #{noticeBoardTypeId}
              , current_timestamp
              , #{noticeBoardTypeName}
              , #{academyId}
              )
    </insert>
</mapper>



